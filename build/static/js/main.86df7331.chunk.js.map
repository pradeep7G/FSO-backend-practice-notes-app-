{"version":3,"sources":["components/Note.js","services/notes.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","Notification","message","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","catch","err","console","log","notesToShow","filter","map","find","n","changedNote","returnedObject","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","length","returnedNote","concat","value","onChange","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAceA,EAZH,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,KAAKC,EAAoB,EAApBA,iBAETC,EAAMF,EAAKG,UAAY,qBAAuB,iBAGlD,OACE,qBAAIC,UAAU,OAAd,UAAsBJ,EAAKK,QAC3B,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCRtCK,EAAQ,aAiBC,EAfF,WAET,OADcC,IAAMC,IAAIF,GACTG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADcL,IAAMM,KAAKP,EAAQM,GAClBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALF,SAACG,EAAGF,GAEb,OADcL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAKF,GAC5BH,MAAK,SAAAC,GAAQ,OAAEA,EAASC,SCA5BK,EAdF,WAMT,OACI,sBAAKC,MANS,CACdC,MAAM,QACNC,UAAU,SACVC,SAAS,IAGT,UACI,uBACA,oFCLNC,EAAa,SAAC,GAAa,IAAZC,EAAW,EAAXA,QACnB,OAAY,MAATA,EAEM,KAGP,qBAAKnB,UAAU,QAAf,SACGmB,KAsFQC,EAjFL,SAACC,GACT,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA2BF,mBAAS,mBAApC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA2BJ,oBAAS,GAApC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAqCN,mBAAS,MAA9C,mBAAOO,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACRC,IACC1B,MAAK,SAAA2B,GACJT,EAASS,MAEVC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEd,IAEF,IAqCMG,EAAYX,EAChBJ,EACAA,EAAMgB,QAAO,SAAA3C,GAAI,OAAIA,EAAKG,aAE5B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcoB,QAASU,IACvB,8BACE,yBAAQ3B,QAAS,kBAAI0B,GAAYD,IAAjC,kBACQA,EAAU,YAAc,WAGlC,6BACGW,EAAYE,KAAI,SAAC5C,GAAD,OACjB,cAAC,EAAD,CAAoBA,KAAMA,EAC1BC,iBAAkB,kBAnCC,SAACc,GAGtB,IAAMf,EAAK2B,EAAMkB,MAAK,SAAAC,GAAC,OAAEA,EAAE/B,KAAKA,KAC1BgC,EAAY,2BAAI/C,GAAL,IAAUG,WAAWH,EAAKG,YAC3CiC,EAAmBrB,EAAGgC,GACrBrC,MAAK,SAAAsC,GACJpB,EAASD,EAAMiB,KAAI,SAAA5C,GAAI,OAAEA,EAAKe,KAAKA,EAAIf,EAAOgD,SAE/CV,OAAM,SAAAW,GACLf,EAAgB,SAAD,OACJlC,EAAKK,QADD,sCAGf6C,YAAW,WACThB,EAAgB,QAChB,QAoBoBiB,CAAmBnD,EAAKe,MADnCf,EAAKe,SAKlB,uBAAMqC,SAzDI,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAW,CACflD,QAAQwB,EACR2B,KAAK,IAAIC,KACTtD,UAAWuD,KAAKC,SAAW,GAC3B5C,GAAGY,EAAMiC,OAAO,GAElBxB,EAAmBmB,GAClB7C,MAAK,SAAAmD,GACJjC,EAASD,EAAMmC,OAAOD,IACtB/B,EAAW,QA8CX,UACE,uBAAOiC,MAAOlC,EAASmC,SA5CN,SAACX,GACtBvB,EAAWuB,EAAMY,OAAOF,UA4CpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MCzFJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.86df7331.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note=(({note,toggleImportance})=>{\r\n\r\n    const label=note.important ? 'make not important' : 'make important';\r\n\r\n\r\n      return (\r\n        <li className=\"note\">{note.content}\r\n        <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n      )\r\n});\r\n\r\nexport default Note;\r\n","import axios from 'axios';\r\nconst baseUrl='/api/notes';\r\n\r\nconst getAll=()=>{\r\n    const request=axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n    const request=axios.post(baseUrl,newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst update=(id,newObject)=>{\r\n    const request=axios.put(`${baseUrl}/${id}`,newObject);\r\n    return request.then(response=>response.data);\r\n}\r\n\r\nexport default {getAll,create,update}","import React from 'react';\r\nconst Footer=()=>{\r\n    const footerStyle={\r\n        color:'green',\r\n        fontStyle:'italic',\r\n        fontSize:16\r\n    }\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br/>\r\n            <em>Note app,Department of Comp Sci.,IIIT Sri City</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React,{useState,useEffect} from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport Footer from './components/Footer';\n\nconst Notification=({message})=>{\n  if(message==null)\n  {\n    return null;\n  }\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst App=(props)=>{\n  const [notes,setNotes]=useState([]);\n  const [newNote,setNewNote]=useState('a new note ....');\n  const [showAll,setShowAll]=useState(true);\n  const [errorMessage,setErrorMessage]=useState(null);\n\n  useEffect(()=>{\n    noteService.getAll()\n    .then(initialNotes=>{\n      setNotes(initialNotes)\n    })\n    .catch((err)=>{\n      console.log(err);\n    })\n  },[]);\n\n  const addNote=(event)=>{\n    event.preventDefault();\n    const noteObject={\n      content:newNote,\n      date:new Date(),\n      important: Math.random() < 0.5,\n      id:notes.length+1\n    }\n    noteService.create(noteObject)\n    .then(returnedNote=>{\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    })\n  }\n  const handleNoteChange=(event)=>{\n    setNewNote(event.target.value);\n  }\n\n  const toggleImportanceOf=(id)=>{\n      // console.log('importance of '+ id+'needs to be toggled');\n      // const url= `http://localhost:3001/notes/${id}`;\n      const note=notes.find(n=>n.id===id)\n      const changedNote={...note,important:!note.important};\n      noteService.update(id,changedNote)\n      .then(returnedObject=>{\n        setNotes(notes.map(note=>note.id!==id? note : returnedObject));\n      })\n      .catch(error=>{\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(()=>{\n          setErrorMessage(null)\n        },5000)\n      })\n  }\n\n  const notesToShow=showAll \n  ? notes \n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={()=>setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note)=>\n        <Note key={note.id} note={note} \n        toggleImportance={()=>toggleImportanceOf(note.id)}\n        />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}/>\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n\n"],"sourceRoot":""}